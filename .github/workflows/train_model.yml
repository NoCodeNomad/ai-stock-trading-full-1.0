import yfinance as yf
import pandas as pd
from ta.trend import SMAIndicator
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import joblib
import os
import requests

def scrape_nasdaq100_symbols():
    url = "https://en.wikipedia.org/wiki/NASDAQ-100"
    try:
        tables = pd.read_html(url)
        # Find the correct table with tickers (usually the first one or second one)
        for table in tables:
            if "Ticker" in table.columns or "Ticker symbol" in table.columns:
                ticker_col = "Ticker" if "Ticker" in table.columns else "Ticker symbol"
                symbols = table[ticker_col].tolist()
                # Clean symbols (remove any suffixes or whitespace)
                symbols = [sym.strip().replace('.', '-') for sym in symbols]
                return symbols
        print("Could not find ticker table on NASDAQ-100 Wikipedia page.")
        return []
    except Exception as e:
        print(f"Error scraping NASDAQ-100 symbols: {e}")
        return []

def get_crypto_symbols():
    # Add popular cryptos manually
    return [
        "BTC-USD", "ETH-USD", "BNB-USD", "XRP-USD", "ADA-USD",
        "DOGE-USD", "MATIC-USD", "SOL-USD", "DOT-USD", "LTC-USD"
    ]

def get_features(df):
    try:
        df = df.copy()
        df['SMA_10'] = SMAIndicator(df['Close'], window=10).sma_indicator().squeeze()
        df['SMA_50'] =_]()
